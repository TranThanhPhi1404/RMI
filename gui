package gkRMI;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;

public class GUI extends JFrame {

	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI frame = new GUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public GUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		setLocationRelativeTo(null);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Từ Điển");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 20));
		lblNewLabel.setBounds(163, 10, 89, 40);
		contentPane.add(lblNewLabel);
		
		JButton btnNewButton = new JButton("Tìm");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					LocateRegistry.getRegistry();
					Dict remote = (Dict) Naming.lookup("rmi://localhost:3333/Dict");
					String s = textField.getText().trim();
					if (s.equals("")) {
						JOptionPane.showMessageDialog(null, "Nhập lại");
						textField.requestFocus();
						return;
					} 
					textField_1.setText(remote.searchWord(textField.getText()));
					
					
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (MalformedURLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (NotBoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
				
				
				
				
			}
		});
		btnNewButton.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnNewButton.setBounds(315, 49, 85, 21);
		contentPane.add(btnNewButton);
		
		JButton btnXa = new JButton("xóa");
		btnXa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
		            LocateRegistry.getRegistry();
		            Dict remote = (Dict) Naming.lookup("rmi://localhost:3333/Dict");
		            String word = textField.getText().trim();
		            if (word.equals("")) {
		                JOptionPane.showMessageDialog(null, "Nhập lại từ");
		                textField.requestFocus();
		                return;
		            }
		            boolean success = remote.deleteWord(word) != null;
		            if (success) {
		                JOptionPane.showMessageDialog(null, "Xóa từ thành công");
		                textField_1.setText("");
		            } else {
		                JOptionPane.showMessageDialog(null, "Xóa từ thất bại");
		            }
		        } catch (RemoteException e1) {
		            e1.printStackTrace();
		        } catch (MalformedURLException e1) {
		            e1.printStackTrace();
		        } catch (NotBoundException e1) {
		            e1.printStackTrace();
		        }
			}
		});
		btnXa.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnXa.setBounds(24, 49, 85, 21);
		contentPane.add(btnXa);
		
		JButton btnThm = new JButton("thêm");
		btnThm.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				try {
				LocateRegistry.getRegistry();
	            Dict remote = (Dict) Naming.lookup("rmi://localhost:3333/Dict");
	            String word = textField.getText().trim();
	            String meaning = textField_1.getText().trim();
	            if (word.equals("")) {
	                JOptionPane.showMessageDialog(null, "Nhập lại từ");
	                textField.requestFocus();
	                return;
	            }
	            if (meaning.equals("")) {
	                JOptionPane.showMessageDialog(null, "Nhập lại nghĩa");
	                textField_1.requestFocus();
	                return;
	            }
	            boolean success = remote.insertWord(word, meaning) != null;
	            if (success) {
	                JOptionPane.showMessageDialog(null, "Thêm từ thành công");
	            } else {
	                JOptionPane.showMessageDialog(null, "Thêm từ thất bại");
	            }
	        } catch (RemoteException e1) {
	            e1.printStackTrace();
	        } catch (MalformedURLException e1) {
	            e1.printStackTrace();
	        } catch (NotBoundException e1) {
	            e1.printStackTrace();
	        }
			}
		});
		btnThm.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnThm.setBounds(315, 94, 85, 21);
		contentPane.add(btnThm);
		
		JButton btnSa = new JButton("sửa");
		btnSa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
		            LocateRegistry.getRegistry();
		            Dict remote = (Dict) Naming.lookup("rmi://localhost:3333/Dict");
		            String word = textField.getText().trim();
		            String meaning = textField_1.getText().trim();
		            if (word.equals("")) {
		                JOptionPane.showMessageDialog(null, "Nhập lại từ");
		                textField.requestFocus();
		                return;
		            }
		            if (meaning.equals("")) {
		                JOptionPane.showMessageDialog(null, "Nhập lại nghĩa");
		                textField_1.requestFocus();
		                return;
		            }
		            boolean success = remote.updateWord(word, meaning) != null;
		            if (success) {
		                JOptionPane.showMessageDialog(null, "Sửa từ thành công");
		            } else {
		                JOptionPane.showMessageDialog(null, "Sửa từ thất bại");
		            }
		        } catch (RemoteException e1) {
		            e1.printStackTrace();
		        } catch (MalformedURLException e1) {
		            e1.printStackTrace();
		        } catch (NotBoundException e1) {
		            e1.printStackTrace();
		        }
			}
		});
		btnSa.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnSa.setBounds(24, 94, 85, 21);
		contentPane.add(btnSa);
		
		textField = new JTextField();
		textField.setBounds(123, 127, 216, 40);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JLabel lblNewLabel_1 = new JLabel("từ");
		lblNewLabel_1.setFont(new Font("Tahoma", Font.ITALIC, 14));
		lblNewLabel_1.setBounds(61, 131, 96, 27);
		contentPane.add(lblNewLabel_1);
		
		JLabel lblNewLabel_1_1 = new JLabel("nghĩa");
		lblNewLabel_1_1.setFont(new Font("Tahoma", Font.ITALIC, 14));
		lblNewLabel_1_1.setBounds(61, 176, 96, 27);
		contentPane.add(lblNewLabel_1_1);
		
		textField_1 = new JTextField();
		textField_1.setColumns(10);
		textField_1.setBounds(123, 177, 216, 40);
		contentPane.add(textField_1);
		
		JButton btnNewButton_1 = new JButton("Thoát");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int option = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn thoát khỏi ứng dụng không?", "Xác nhận thoát", JOptionPane.YES_NO_OPTION);
		        if (option == JOptionPane.YES_OPTION) {
		            System.exit(0);
		        }
			}
		});
		btnNewButton_1.setBounds(315, 232, 85, 21);
		contentPane.add(btnNewButton_1);
		
		
	}
}
